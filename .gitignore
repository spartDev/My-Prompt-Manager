# Chrome Extension My Prompt Manager - .gitignore

# Build output
dist/
build/

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Package manager lockfiles (keep package-lock.json if using npm)
# Uncomment the next line if you prefer not to commit lockfiles
# package-lock.json
yarn.lock
pnpm-lock.yaml

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Chrome extension packaging
*.zip
*.crx
*.pem

# Development and testing
.cache/
.temp/
.tmp/
coverage/
.nyc_output

# Log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Chrome extension specific
web-ext-artifacts/
extension.zip
extension-*.zip

# Temporary files
*.tmp
*.temp

# Backup files
*.bak
*.backup
*~

# ESLint cache
.eslintcache

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Local development
.local

# Generated icons (if using icon generation tools)
# Uncomment if you generate icons automatically
# public/icons/generated/

# Chrome extension development
# Uncomment if you don't want to commit these
# manifest.json (only if generated)
# public/icons/ (only if generated automatically)

# Claude
.claude/settings.local.json